// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0
// source: securityofficer.sql

package db

import (
	"context"
)

const getAllIssuesByAllSecurityOfficers = `-- name: GetAllIssuesByAllSecurityOfficers :many
SELECT i.issue_id, i.description, i.status, i.comments, i.created_at
FROM "Issues" i
         JOIN "SecurityOfficerIssues" soi ON i.issue_id = soi.issue_id
         JOIN "SecuritOfficers" so ON soi.officer_id = so.officer_id
         JOIN "Customers" c ON so.customer_id = c.customer_id
WHERE c.customer_id = $1
`

func (q *Queries) GetAllIssuesByAllSecurityOfficers(ctx context.Context, customerID int64) ([]Issue, error) {
	rows, err := q.db.QueryContext(ctx, getAllIssuesByAllSecurityOfficers, customerID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []Issue{}
	for rows.Next() {
		var i Issue
		if err := rows.Scan(
			&i.IssueID,
			&i.Description,
			&i.Status,
			&i.Comments,
			&i.CreatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
