// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0

package db

import (
	"context"
)

type Querier interface {
	AddNewDrone(ctx context.Context, arg AddNewDroneParams) (Drone, error)
	// Page number (0-based)
	CreateCustomerIssue(ctx context.Context, arg CreateCustomerIssueParams) (CustomerIssue, error)
	CreateNewAdmin(ctx context.Context, arg CreateNewAdminParams) (int64, error)
	CreateNewCustomer(ctx context.Context, arg CreateNewCustomerParams) (Customer, error)
	CreateNewSecurityOfficer(ctx context.Context, arg CreateNewSecurityOfficerParams) (SecuritOfficer, error)
	CreateSecurityOfficerIssue(ctx context.Context, arg CreateSecurityOfficerIssueParams) (SecurityOfficerIssue, error)
	DeleteDrone(ctx context.Context, droneID int64) (Drone, error)
	GetAlertsCountsByPriority(ctx context.Context, customerID int64) ([]GetAlertsCountsByPriorityRow, error)
	GetAllActiveSecurityOfficers(ctx context.Context, customerID int64) ([]User, error)
	GetAllAlerts(ctx context.Context, customerID int64) (SafetyDetectionAlert, error)
	GetAllDronesByCustomer(ctx context.Context, customerID int64) ([]Drone, error)
	GetAllIssuesByAllSecurityOfficers(ctx context.Context, customerID int64) ([]Issue, error)
	// Page number (0-based)
	GetAllIssuesByCustomer(ctx context.Context, arg GetAllIssuesByCustomerParams) ([]Issue, error)
	GetAllOfficerIssues(ctx context.Context, arg GetAllOfficerIssuesParams) ([]Issue, error)
	GetAllUnResolvedAlertsByDetectionType(ctx context.Context, arg GetAllUnResolvedAlertsByDetectionTypeParams) ([]SafetyDetectionAlert, error)
	GetUnResolvedAlertsCountsByPriority(ctx context.Context, customerID int64) ([]GetUnResolvedAlertsCountsByPriorityRow, error)
	GetUser(ctx context.Context, userID int64) (User, error)
	StopDroneStream(ctx context.Context, arg StopDroneStreamParams) (Feed, error)
	UpdateIssueStatus(ctx context.Context, arg UpdateIssueStatusParams) (Issue, error)
}

var _ Querier = (*Queries)(nil)
