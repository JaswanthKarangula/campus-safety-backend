definitions:
  api.AddNewDroneRequest:
    properties:
      customer_id:
        type: integer
      model:
        type: string
      status:
        type: string
    required:
    - customer_id
    - model
    - status
    type: object
  api.CreateNewAdminRequest:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  api.CreateNewCustomerIssueRequest:
    properties:
      customer_id:
        type: integer
      description:
        type: string
    required:
    - customer_id
    - description
    type: object
  api.CreateNewOfficerIssueRequest:
    properties:
      description:
        type: string
      officer_id:
        type: integer
    required:
    - description
    - officer_id
    type: object
  api.CreateNewSecurityOfficerRequest:
    properties:
      customerid:
        type: integer
      email:
        minLength: 6
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - customerid
    - email
    - password
    - username
    type: object
  api.GetActiveOfficersRequest:
    properties:
      customerid:
        type: integer
    required:
    - customerid
    type: object
  api.GetAllDronesRequest:
    properties:
      customerid:
        type: integer
    required:
    - customerid
    type: object
  api.GetAllIssuesRequest:
    properties:
      customerid:
        type: integer
      limit:
        type: integer
      offset:
        type: integer
    required:
    - customerid
    - limit
    - offset
    type: object
  api.UpdateIssueRequest:
    properties:
      comments:
        type: string
      issue_id:
        type: integer
      status:
        type: string
    required:
    - comments
    - issue_id
    - status
    type: object
  api.UpdateStreamRequest:
    properties:
      stream_id:
        type: integer
    required:
    - stream_id
    type: object
  db.Drone:
    properties:
      customer_id:
        type: integer
      drone_id:
        type: integer
      last_active:
        $ref: '#/definitions/sql.NullTime'
      model:
        type: string
      status:
        description: active,inactive,streaming
        type: string
    type: object
  db.Issue:
    properties:
      comments:
        type: string
      created_at:
        type: string
      description:
        type: string
      issue_id:
        type: integer
      status:
        type: string
    type: object
  db.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      hashedpassword:
        type: string
      role:
        description: Admin,Customer,Security Officer
        type: string
      user_id:
        type: integer
      username:
        type: string
    type: object
  sql.NullTime:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
host: 0.0.0.0:8080
info:
  contact: {}
  description: Drone Saefty Backend
  title: Drone Saefty Backend
  version: "1.0"
paths:
  /admin/createAdmin:
    post:
      description: adds a New admin in Db.
      parameters:
      - description: adds a New Drone For Customer  in Db
        in: body
        name: device
        required: true
        schema:
          $ref: '#/definitions/api.CreateNewAdminRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: creates a new admin
      tags:
      - admin
  /customer/addNewDrone:
    post:
      description: adds a New Drone For Customer  in Db.
      parameters:
      - description: adds a New Drone For Customer  in Db
        in: body
        name: device
        required: true
        schema:
          $ref: '#/definitions/api.AddNewDroneRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: addNewDroneForCustomer
      tags:
      - customer
  /customer/createCustomer:
    post:
      description: adds a New Drone For Customer  in Db.
      parameters:
      - description: adds a New Drone For Customer  in Db
        in: body
        name: device
        required: true
        schema:
          $ref: '#/definitions/api.AddNewDroneRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: addNewDroneForCustomer
      tags:
      - customer
  /customer/getAllActiveOfficers:
    get:
      description: returns all active security officers.
      parameters:
      - description: returns active security officers For Customer  in Db
        in: body
        name: device
        required: true
        schema:
          $ref: '#/definitions/api.GetActiveOfficersRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.User'
            type: array
      summary: getActiveOfficers
      tags:
      - customer
  /customer/getAllDrones:
    get:
      description: eturns all drones  of a Customer.
      parameters:
      - description: returns all drones  of a Customer  in Db
        in: body
        name: device
        required: true
        schema:
          $ref: '#/definitions/api.GetAllDronesRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.Drone'
            type: array
      summary: getAllDrones
      tags:
      - customer
  /customer/getAllIssuesByCustomer:
    get:
      description: returns all issues raised by Customer.
      parameters:
      - description: returns all issues raised by customers  in Db
        in: body
        name: device
        required: true
        schema:
          $ref: '#/definitions/api.GetAllIssuesRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.Issue'
            type: array
      summary: getAllIssuesByCustomer
      tags:
      - customer
  /customer/getAllOfficerIssues:
    get:
      description: returns all issues raised by officers  of a Customer.
      parameters:
      - description: returns all issues raised by officers  of a Customer in Db
        in: body
        name: device
        required: true
        schema:
          $ref: '#/definitions/api.GetAllIssuesRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.Issue'
            type: array
      summary: getAllOfficerIssues
      tags:
      - customer
  /customer/raiseCustomerIssue:
    post:
      description: raises a new issue by customer  in Db.
      parameters:
      - description: raises a new issue by customer in Db
        in: body
        name: device
        required: true
        schema:
          $ref: '#/definitions/api.CreateNewCustomerIssueRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: createNewCustomerIssue
      tags:
      - customer
  /customer/stopDroneStream:
    put:
      description: update stream.
      parameters:
      - description: stop the stream
        in: body
        name: device
        required: true
        schema:
          $ref: '#/definitions/api.UpdateStreamRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: update stream
      tags:
      - customer
  /issue/updateIssue:
    put:
      description: updates an issue by officer  in Db.
      parameters:
      - description: updates an  issue  in Db
        in: body
        name: device
        required: true
        schema:
          $ref: '#/definitions/api.UpdateIssueRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: updateIssue
      tags:
      - issue
  /officer/createOfficer:
    post:
      description: adds a New Security officer For Customer  in Db.
      parameters:
      - description: adds a New officer For Customer  in Db
        in: body
        name: device
        required: true
        schema:
          $ref: '#/definitions/api.CreateNewSecurityOfficerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: createNewSecurityOfficer
      tags:
      - officer
  /officer/raiseOfficerIssue:
    post:
      description: raises a new issue by officer  in Db.
      parameters:
      - description: raises a new issue by officer in Db
        in: body
        name: device
        required: true
        schema:
          $ref: '#/definitions/api.CreateNewOfficerIssueRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: createNewOfficerIssue
      tags:
      - customer
swagger: "2.0"
